name: 'Addon-HyperHDR'

# Controls when the action will run
on: [ workflow_dispatch ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Set up Node.js
      - uses: actions/setup-node@v1

      # Sync version to source
      - run: ./.github/scripts/update-hyperhdr-version.sh

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build the Docker image for different architectures
      - name: Build and Push Docker Image for amd64
        run: |
          docker build -t ghcr.io/${{ github.repository }}/hyperhdr:amd64 -f Dockerfile .
          docker push ghcr.io/${{ github.repository }}/hyperhdr:amd64

      - name: Build and Push Docker Image for armhf
        run: |
          docker build -t ghcr.io/${{ github.repository }}/hyperhdr:armhf -f Dockerfile.armhf .
          docker push ghcr.io/${{ github.repository }}/hyperhdr:armhf

      - name: Build and Push Docker Image for aarch64
        run: |
          docker build -t ghcr.io/${{ github.repository }}/hyperhdr:aarch64 -f Dockerfile.aarch64 .
          docker push ghcr.io/${{ github.repository }}/hyperhdr:aarch64

      # Update version if needed
      - uses: test-room-7/action-update-file@v1
        if: ${{ env.VERSION != env.RELEASE }}
        with:
          file-path: addon-hyperhdr/config.json
          commit-msg: Update version
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Create a GitHub release
      - uses: actions/create-release@v1
        if: ${{ env.VERSION != env.RELEASE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE }}
          release_name: ${{ env.RELEASE }}
          draft: false
          prerelease: false
